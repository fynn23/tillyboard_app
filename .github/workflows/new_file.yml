name: Ensure src/foo.bar exists

on:
  push:
    branches:
      - staging    # anpassen falls nötig
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  ensure-file:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure directory and file content
        env:
          TARGET_FILE: src/foo.bar
        run: |
          set -e
          mkdir -p src
          NEW_CONTENT=$'Hello\nWorld\n'
          if [ ! -f "$TARGET_FILE" ]; then
            printf "%s" "$NEW_CONTENT" > "$TARGET_FILE"
          else
            if ! diff -q <(printf "%s" "$NEW_CONTENT") "$TARGET_FILE" >/dev/null 2>&1; then
              printf "%s" "$NEW_CONTENT" > "$TARGET_FILE"
            fi
          fi
          echo "=== ls -la src ==="
          ls -la src

      - name: Commit & push if changed
        env:
          TARGET_FILE: src/foo.bar
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Datei zum Index hinzufügen (auch wenn sie neu ist)
          git add -A "$TARGET_FILE" || true

          # committen NUR wenn etwas im Index ist
          if git diff --cached --quiet; then
            echo "No changes – nothing to commit."
          else
            git commit -m "chore: ensure $TARGET_FILE exists [skip ci]"
            # optional: Rebase ziehen, falls remote voraus ist (verhindert non-fast-forward)
            git pull --rebase --autostash origin "$BRANCH_NAME" || true
            git push origin "$BRANCH_NAME"
            echo "Committed and pushed changes to $BRANCH_NAME."
          fi
